{"version":3,"sources":["functions.js","application.js","settings.js","home.js","login.js","register.js","messages/add_friends.js","messages/messages.js","en.js","ms.js","home_controller.js","login_controller.js","registration_controller.js","messages/messages_controller.js","api.js","auth.js","http_interceptor.js"],"names":["w","a","encrypt","m","k","element","document","injector","get","e","CryptoJS","AES","toString","decrypt","d","enc","Utf8","window","angular","application","module","config","$httpProvider","defaults","headers","common","Content-Type","post","put","delete","interceptors","push","$mdThemingProvider","alwaysWatchTheme","theme","primaryPalette","accentPalette","default","$translateProvider","useSanitizeValueStrategy","preferredLanguage","$locationProvider","$routeProvider","html5Mode","hashPrefix","otherwise","redirectTo","factory","settings","when","controller","templateUrl","resolve","isGuest","Auth","translations","action_add_person","action_back","action_comment","action_details","action_email","action_image","action_login","action_menu","action_message","action_notifications","action_person","action_reset","action_search","action_shopping_cart","action_submit","action_text","label_username","label_password","title_add_friend","title_chatters","title_login","title_message","title_register","toast_incorrect_credentials","toast_invalid_refresh_token","toast_method_not_allowed","toast_validation_failed","validation_maxlength_24","validation_maxlength_255","validation_maxlength_40","validation_minlength_4","validation_required","$scope","$location","query","username","reset","$","messages","path","imagePath","moments","face","name","times","dates","notes","profileMenu","menu","id","qr","gender","region","status","db","PouchDB","err","result","console","log","info","then","pouchDB","register","error","doc","$mdSidenav","back","add","close","friends","open","todoList","todoText","todoInput","done","todoAdd","no","created_at","Date","now","chartObject","type","onions","v","data","cols","label","rows","c","options","title","Settings","api","endpoint","host","concat","$http","$q","$window","API","auth","forget","deferred","defer","localStorage","removeItem","promise","handler","response","expires_in","access_token","refresh_token","token_type","hasOwnProperty","fromJson","isLogged","reject","refresh","grant_type","user_id","user_secret","scope","scopes","join","session","toJson","verify","credentials","password","$injector","$translate","refreshPromise","httpInterceptor","request","Authorization","responseError","rejection","text","$mdToast","toast","simple","content","position","show","message"],"mappings":"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","file":"application.min.js","sourcesContent":["(function(w, a)\r\n{\r\n    w.encrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var e = w.CryptoJS.AES.encrypt(m, k);\r\n        return e.toString();\r\n    };\r\n\r\n    w.decrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var d = w.CryptoJS.AES.decrypt(m, k);\r\n        return d.toString(w.CryptoJS.enc.Utf8);\r\n    };\r\n})(window, angular);\r\n","var application = angular.module('application', [\r\n    'm',\r\n    'ngAnimate',\r\n    'ngAria',\r\n    'ngMaterial',\r\n    'ngMessageFormat',\r\n    'ngMessages',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'yaru22.angular-timeago',\r\n    'ngSanitize',\r\n    'pouchdb',\r\n    'pascalprecht.translate', // angular-translate\r\n    'application.templates', // application templates cache\r\n]);\r\n\r\napplication.config(['$httpProvider',\r\n    function($httpProvider)\r\n    {\r\n        $httpProvider.defaults.headers = {\r\n            common: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            post: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            put: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            delete: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        $httpProvider.interceptors.push('HttpInterceptor');\r\n    }]);\r\n\r\napplication.config(['$mdThemingProvider',\r\n    function($mdThemingProvider)\r\n    {\r\n        $mdThemingProvider.alwaysWatchTheme(true);\r\n        \r\n        $mdThemingProvider.theme('cyan')\r\n            .primaryPalette('cyan')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('deep-purple')\r\n            .primaryPalette('deep-purple')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('green')\r\n            .primaryPalette('green')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('light-green')\r\n            .primaryPalette('light-green')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('purple')\r\n            .primaryPalette('purple')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('pink')\r\n            .primaryPalette('pink')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('red')\r\n            .primaryPalette('red')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('teal')\r\n            .primaryPalette('teal')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('grey')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n\r\n        $mdThemingProvider.theme('white')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n    }]);\r\n\r\napplication.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.useSanitizeValueStrategy('sanitize');\r\n        $translateProvider.preferredLanguage('en');\r\n    }]);\r\n\r\napplication.config(['$locationProvider', '$routeProvider',\r\n    function($locationProvider, $routeProvider)\r\n    {\r\n        $locationProvider.html5Mode(true)\r\n            .hashPrefix('!#');\r\n\r\n        $routeProvider.otherwise({\r\n                redirectTo: '/login',\r\n            });\r\n    }]);\r\n","application.factory('Settings',\r\n    function()\r\n    {\r\n        var settings = {};\r\n        return settings;\r\n    });\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/home', {\r\n                controller: 'HomeController',\r\n                templateUrl: 'home.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/login', {\r\n                controller: 'LoginController',\r\n                templateUrl: 'login.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/register', {\r\n                controller: 'RegisterController',\r\n                templateUrl: 'register.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.controller('AddFriendsController', ['$location', '$mdSidenav', '$scope',\r\n    function($location, $mdSidenav, $scope)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n        \r\n        $scope.back = function()\r\n        {\r\n            $location.path('/home');\r\n        };\r\n        \r\n        $scope.add = function()\r\n        {\r\n            $location.path('/addFriends');\r\n        };\r\n        \r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('friends').close();\r\n        };        \r\n        \r\n        $scope.friends = function()\r\n        {\r\n            $mdSidenav('friends').open();\r\n        };\r\n        \r\n        $scope.todoList = [{todoText:$scope.todoInput, done:false}];\r\n\r\n        $scope.todoAdd = function() {\r\n            $scope.todoList.push({todoText:$scope.todoInput, done:false});\r\n            $scope.todoInput = \"\";\r\n        };\r\n\r\n         var imagePath = 'img/list/60.jpeg';\r\n            $scope.messages = [\r\n              {\r\n                face : imagePath,\r\n                no: '0123456789',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" testing\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0132456789',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" I'll be in your neighborhood doing errands\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0172345689',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" stay away\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0142356789',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" nice to know you\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0162345987',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" it's time for you and me\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0123987654',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" rampage\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0193265487',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" and the end\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0129874563',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" just ok\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0162398745',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" let it go\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '014327895',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" try to make a good atitude\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0163294578',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" stanby\"\r\n              },\r\n            ];\r\n    }]);","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/messages', {\r\n                controller: 'MessagesController',\r\n                templateUrl: 'messages/messages.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('en', {\r\n            \r\n            'action_add_person': 'Add Friend',\r\n            'action_back': 'Back',\r\n            'action_comment': 'Comment',\r\n            'action_details': 'Details',\r\n            'action_email': 'Email',\r\n            'action_image': 'Image',\r\n            'action_login': 'Login',\r\n            'action_menu': 'Menu',\r\n            'action_message': 'Messages',\r\n            'action_notifications': 'Notifications',\r\n            'action_person': 'Person',\r\n            'action_reset': 'Reset',\r\n            'action_search': 'Search',\r\n            'action_shopping_cart': 'Shopping Cart',\r\n            'action_submit': 'Submit',\r\n            'action_text': 'Text',\r\n            \r\n            'label_username': 'Username',\r\n            'label_password': 'Password',\r\n            \r\n            'title_add_friend': 'Add Friends',\r\n            'title_chatters': 'Chatters',\r\n            'title_login': 'Login',\r\n            'title_message': 'Messages',\r\n            'title_register': 'Register',\r\n\r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('ms', {\r\n        \r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.controller('HomeController', ['$scope', '$location',\r\n    function($scope, $location)\r\n    {\r\n        $scope.theme = 'teal';\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n        \r\n        $scope.messages = function()\r\n        {\r\n            $location.path('/messages');\r\n        };\r\n        \r\n        var imagePath= 'images.jpg';\r\n            $scope.moments = [\r\n              {\r\n                face : imagePath,\r\n                name: 'hafiz',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" testing\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                name: 'wahab',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" nevermind la.\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                name: 'tira',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" stay away\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                name: 'limin',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" nice to know you\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                name: 'apek',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" it's time for you and me\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                name: 'lina',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" rampage\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                name: 'mickey',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" and the end\"\r\n              },\r\n            ];\r\n            \r\n            $scope.profileMenu = [\r\n              {\r\n                menu : 'Profile Picture',\r\n                face : imagePath,\r\n              },\r\n              {\r\n                menu : 'Full Name',\r\n                name : 'Mohammad Hafiz Amiruddin',\r\n              },\r\n              {\r\n                menu : 'Charters ID',\r\n                id : '123456789',\r\n              },\r\n              {\r\n                menu : 'My QR Code',\r\n                qr : 'Charters ID',\r\n              },\r\n              {\r\n                menu : 'Gender',\r\n                gender: 'Male',\r\n              },\r\n              {\r\n                menu : 'Region',\r\n                region : 'Islam',\r\n              },\r\n              {\r\n                menu : 'Status',\r\n                status : 'Nice to meet you',\r\n              },\r\n            ];\r\n            \r\n    var db = new PouchDB('http://192.168.1.155:5984/chat');\r\n    \r\n    db.put(function callback(err, result) \r\n    {\r\n      if (!err) {\r\n        console.log('Registration successfull!');\r\n      }\r\n    });\r\n    \r\n    db.info().then(function (info) {\r\n      console.log(info);\r\n    })\r\n}]);","application.controller('LoginController', ['$location', '$scope', 'pouchDB',\r\n    function($location, $scope, pouchDB)\r\n    {\r\n        \r\n        $scope.register = function()\r\n        {\r\n            $location.path('/register');\r\n        };\r\n}]);\r\n","application.controller('RegisterController', ['$location', '$scope', 'pouchDB',\r\n    function($location, $scope, pouchDB)\r\n    {\r\n        \r\n        $scope.register = function()\r\n        {\r\n            $location.path('/register');\r\n        };\r\n        \r\n    var db = new PouchDB('http://192.168.1.155:5984/chat');\r\n    \r\n    function register(text) \r\n    {\r\n      var chat = {\r\n        _id: new Date().toISOString(),\r\n        title: text,\r\n        email: text,\r\n        password: text,\r\n        completed: false\r\n    };\r\n      \r\n    db.put(chat, function callback(err, result) \r\n    {\r\n      if (!err) {\r\n        console.log('Registration successfull!');\r\n      }\r\n    });\r\n    }\r\n    \r\n    db.info().then(function (info) {\r\n      console.log(info);\r\n    })\r\n    \r\n    db.get('2015-10-19T03:57:53.013Z', function (error, doc) {\r\n      if (error) {\r\n        // oh noes! we got an error\r\n      } else {\r\n        // okay, doc contains our document\r\n      }\r\n    });\r\n}]);\r\n\r\n","application.controller('MessagesController', ['$location', '$mdSidenav', '$scope',\r\n    function($location, $mdSidenav, $scope)\r\n    {\r\n        withoutSuffix: true\r\n        \r\n        $scope.theme = 'teal';\r\n\r\n        $scope.query = {\r\n            username: '',\r\n        };\r\n\r\n        $scope.reset = function()\r\n        {\r\n            $scope.query.$ = '';\r\n        };\r\n        \r\n        $scope.back = function()\r\n        {\r\n            $location.path('/home');\r\n        };\r\n        \r\n        $scope.add = function()\r\n        {\r\n            $location.path('/addFriends');\r\n        };\r\n        \r\n        $scope.close = function()\r\n        {\r\n            $mdSidenav('friends').close();\r\n        };        \r\n        \r\n        $scope.friends = function()\r\n        {\r\n            $mdSidenav('friends').open();\r\n        };\r\n        \r\n        $scope.todoList = [{todoText:'Clean House', created_at: Date.now()}];\r\n\r\n        $scope.todoAdd = function() {\r\n            $scope.todoList.push({todoText:$scope.todoInput, created_at: Date.now()});\r\n            $scope.todoInput = \"\";\r\n        };\r\n\r\n         var imagePath = 'img/list/60.jpeg';\r\n            $scope.messages = [\r\n              {\r\n                face : imagePath,\r\n                no: '0123456789',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" testing\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0132456789',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" I'll be in your neighborhood doing errands\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0172345689',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" stay away\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0142356789',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" nice to know you\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0162345987',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" it's time for you and me\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0123987654',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" rampage\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0193265487',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" and the end\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0129874563',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" just ok\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0162398745',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" let it go\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '014327895',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" try to make a good atitude\"\r\n              },\r\n              {\r\n                face : imagePath,\r\n                no: '0163294578',\r\n                times: '7.45 A.M',\r\n                dates: '2 October 2015',\r\n                notes: \" stanby\"\r\n              },\r\n            ];\r\n            \r\n            $scope.chartObject = {};\r\n    \r\n            $scope.chartObject.type = \"BarChart\";\r\n            \r\n            $scope.onions = [\r\n                {v: \"Onions\"},\r\n                {v: 3},\r\n            ];\r\n\r\n            $scope.chartObject.data = {\"cols\": [\r\n                {id: \"t\", label: \"Topping\", type: \"string\"},\r\n                {id: \"s\", label: \"Slices\", type: \"number\"}\r\n            ], \"rows\": [\r\n                {c: [\r\n                    {v: \"Mushrooms\"},\r\n                    {v: 3},\r\n                ]},\r\n                {c: $scope.onions},\r\n                {c: [\r\n                    {v: \"Olives\"},\r\n                    {v: 31}\r\n                ]},\r\n                {c: [\r\n                    {v: \"Zucchini\"},\r\n                    {v: 1},\r\n                ]},\r\n                {c: [\r\n                    {v: \"Pepperoni\"},\r\n                    {v: 2},\r\n                ]}\r\n            ]};\r\n\r\n            $scope.chartObject.options = {\r\n                'title': 'How Much Pizza I Ate Last Night'\r\n            };\r\n    }]);","application.factory('API', ['Settings',\r\n    function(Settings)\r\n    {\r\n        var api = {};\r\n\r\n        //api.access_token    = '/api/access_token';\r\n        //api.session         = '/api/session';\r\n        //api.users           = '/api/users/:user_id';\r\n        \r\n        api.get = function(endpoint)\r\n        {\r\n            return Settings.host.concat(api[endpoint]);\r\n        };\r\n\r\n        return api;\r\n    }]);\r\n","application.factory('Auth', ['$http', '$location', '$q', '$window', 'API', 'Settings',\r\n    function($http, $location, $q, $window, API, Settings)\r\n    {\r\n        var auth = {};\r\n\r\n        auth.forget = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            $window.localStorage.removeItem('expires_in');\r\n            $window.localStorage.removeItem('access_token');\r\n            $window.localStorage.removeItem('refresh_token');\r\n            $window.localStorage.removeItem('token_type');\r\n            $window.localStorage.removeItem('id');\r\n            $window.localStorage.removeItem('type');\r\n            $window.localStorage.removeItem('scopes');\r\n            $location.path('/login');\r\n\r\n            deferred.resolve();\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.handler = function(response)\r\n        {\r\n            $window.localStorage.expires_in      = response.data.expires_in;\r\n            $window.localStorage.access_token    = response.data.access_token;\r\n            $window.localStorage.refresh_token   = response.data.refresh_token;\r\n            $window.localStorage.token_type      = response.data.token_type;\r\n            return response;\r\n        };\r\n\r\n        auth.id = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('id')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.id);\r\n        };\r\n\r\n        auth.isGuest = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            auth.isLogged()\r\n                .then(function()\r\n                {\r\n                    deferred.reject('auth.is_guest');\r\n                })\r\n                .catch(function()\r\n                {\r\n                    deferred.resolve(true);\r\n                });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.isLogged = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            if ($window.localStorage.hasOwnProperty('expires_in') &&\r\n                $window.localStorage.hasOwnProperty('access_token') &&\r\n                $window.localStorage.hasOwnProperty('refresh_token') &&\r\n                $window.localStorage.hasOwnProperty('token_type')) {\r\n                deferred.resolve(true);\r\n            } else {\r\n                deferred.reject('auth.is_logged');\r\n            }\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.refresh = function()\r\n        {\r\n            var data = {\r\n                grant_type: 'refresh_token',\r\n                user_id: Settings.user_id,\r\n                user_secret: Settings.user_secret,\r\n                scope: Settings.scopes.join(),\r\n                refresh_token: $window.localStorage.refresh_token,\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        auth.scopes = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('scopes')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.scopes);\r\n        };\r\n\r\n        auth.session = function()\r\n        {\r\n            return $http.get(API.get('session'))\r\n                .then(function(session)\r\n                {\r\n                    console.info(session);\r\n                    $window.localStorage.id = angular.toJson(session.data.id);\r\n                    $window.localStorage.type = angular.toJson(session.data.type);\r\n                    $window.localStorage.scopes = angular.toJson(session.data.scopes);\r\n                });\r\n        };\r\n\r\n        auth.type = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('type')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.type);\r\n        };\r\n\r\n        auth.verify = function(credentials)\r\n        {\r\n            var data = {\r\n                grant_type: 'password',\r\n                user_id: Settings.user_id,\r\n                user_secret: Settings.user_secret,\r\n                scope: Settings.scopes.join(),\r\n                username: credentials['username'],\r\n                password: credentials['password'],\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        return auth;\r\n    }]);\r\n\r\n","application.factory('HttpInterceptor', ['$injector', '$q', '$translate', '$window',\r\n    function($injector, $q, $translate, $window)\r\n    {\r\n        var refreshPromise = null;\r\n\r\n        var httpInterceptor = {};\r\n\r\n        httpInterceptor.request = function(config)\r\n        {\r\n            if ($injector.get('Auth').isLogged()) {\r\n                var token_type = $window.localStorage.token_type;\r\n                var access_token = $window.localStorage.access_token;\r\n                config.headers.Authorization = token_type + ' ' + access_token;\r\n            }\r\n\r\n            return config;\r\n        };\r\n\r\n        httpInterceptor.responseError = function(rejection)\r\n        {\r\n            console.error(rejection);\r\n\r\n            switch (rejection.status) {\r\n                case 401:\r\n                    refreshPromise = refreshPromise ? refreshPromise :\r\n                        $injector.get('Auth').refresh();\r\n\r\n                    return refreshPromise.finally(function()\r\n                        {\r\n                            refreshPromise = null;\r\n                        })\r\n                        .then(function()\r\n                        {\r\n                            return $injector.get('$http')(rejection.config);\r\n                        });\r\n\r\n                case 405:\r\n                    $translate('toast_method_not_allowed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 422:\r\n                    $translate('toast_validation_failed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 500:\r\n                    if (rejection.data.message == 'The user credentials were incorrect.') {\r\n                        $translate('toast_incorrect_credentials')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n\r\n                        return $q.reject(rejection);\r\n                    }\r\n\r\n                    if (rejection.data.message == 'The refresh token is invalid.') {\r\n                        $translate('toast_invalid_refresh_token')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n                    }\r\n\r\n                    $injector.get('Auth')\r\n                        .forget();\r\n\r\n                    return $q.reject(rejection);\r\n            }\r\n        };\r\n\r\n        return httpInterceptor;\r\n    }]);\r\n"],"sourceRoot":"/source/"}